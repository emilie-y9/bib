const cheerio = require('cheerio');
const michelin = require('./michelin');
const BibGLink = 'https://guide.michelin.com/fr/fr/restaurants/bib-gourmand';
const files = require('fs'); //export data in a file

//for a particular restaurant
async function getBibGInfosRestaurant(searchLink = BibGLink) {
  try {
    console.log(`üïµÔ∏è‚Äç‚ôÄÔ∏è  browsing ${searchLink} source`);

    const restaurant = await michelin.scrapeRestaurant(searchLink);

    console.log(restaurant);   
    console.log('done');
    return restaurant;
    

  } catch (e) {
    console.error(e);
    process.exit(1);
  }
}



const [, , searchLink] = process.argv;


async function getAllLinks(searchLink = BibGLink) {
  //
  try {

     array = await michelin.scrapeBibGListRestaurants(searchLink);
    //boolResultsPageExists = await michelin.scrapeResultsPageExist(searchLink);
    //console.log(boolResultsPageExists);
    numberPage = await michelin.scrapeNumberPage(searchLink);
    //while (boolResultsPageExists != false) {

      for (let page = 2; page <= numberPage; page++) {
      searchLink = 'https://guide.michelin.com/fr/fr/restaurants/bib-gourmand/page/' + page;
      array2 = await michelin.scrapeBibGListRestaurants(searchLink)
     array= array.concat(array2);

    }
    console.log(array.toString());
   console.log(JSON.stringify(array));


files.writeFileSync('./files/BibGListRestaurantsURL.json', JSON.stringify(array), (err)=> {
  if (err) throw err;
  console.log('Saved!');
});
    


    console.log('done');
    process.exit(0);
  }
   catch (e) {
    console.error(e);
    process.exit(1);
  }
}

async function getBibGInfosList(){ //fetch all the restaurants one by one using the json file generated by bibUrlList()

	// import the url
	let rawdata = files.readFileSync('./files/BibGListRestaurantsURL.json');
	let url = JSON.parse(rawdata);
	// console.log(url.length);
  var i;
  var restaurant;
	var bibList=[];
	//Now let's fetch all the url one by one
	for (i = 0; i < url.length; i++) {
		restaurant=await getBibGInfosRestaurant(url[i]); 
      bibList.push(restaurant);	
      
  }
/*
  for (i = 0; i < url.length; i++) {
		console.log(bibList[i]);
      
  }
  */
  files.writeFile('./files/BibGRestaurantsInfos.json', JSON.stringify(bibList), (err) => {
    if (err) throw err;
    console.log('Written');
});

}

//getAllLinks(searchLink);
getBibGInfosList();